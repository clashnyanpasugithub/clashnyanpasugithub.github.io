<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashnyanpasugithub.github.io/news/article-48459.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>面试题目:手写一个LRU算法实现</title>
        <meta name="description" content="一、常见的内存淘汰算法    FIFO&nbsp; 先进先出   在这种淘汰算法中，先进⼊缓存的会先被淘汰   命中率很低     LRU        Least recently used，最近最" />
        <link rel="icon" href="/assets/website/img/clashnyanpasugithub/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Nyanpasu Github机场节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashnyanpasugithub.github.io/news/article-48459.htm" />
    <meta property="og:site_name" content="Clash Nyanpasu Github机场节点官网" />
    <meta property="og:title" content="面试题目:手写一个LRU算法实现" />
    <meta property="og:image" content="https://clashnyanpasugithub.github.io/uploads/20240820-1/1d94c2159c33a53a9a625f95ea6a96a4.webp" />
        <meta property="og:release_date" content="2025-01-30T06:45:33" />
    <meta property="og:updated_time" content="2025-01-30T06:45:33" />
        <meta property="og:description" content="一、常见的内存淘汰算法    FIFO&nbsp; 先进先出   在这种淘汰算法中，先进⼊缓存的会先被淘汰   命中率很低     LRU        Least recently used，最近最" />
        
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashnyanpasugithub/style-starter.css">
    <!-- web fonts -->
    <link href="//fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800;900&display=swap" rel="stylesheet">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="面试题目:手写一个LRU算法实现">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-F1C52JTEWP"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-F1C52JTEWP');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand" href="/">
                    <span>Clash Nyanpasu Github</span>
                </a>
                                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </header>
    <!--/header-->
    <!-- about breadcrumbs -->
    <nav id="breadcrumbs" class="breadcrumbs">
        <div class="container page-wrapper">
            <a href="/">首页</a> » <a href="/news/">新闻资讯</a> » <span class="breadcrumb_last" aria-current="page">正文</span>
        </div>
    </nav>
    
    <!-- /index-block2 -->
    <section class="w3l-index3 py-5">
        <div class="container py-lg-3 mt-3">
            <div class="row">
                <div class="col-md-9">
                    <h1 class="mb-5">面试题目:手写一个LRU算法实现</h1>
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<h3>一、常见的内存淘汰算法</h3> <div> <ul> <li> <p>FIFO&nbsp; 先进先出</p> <ul> <li> <p>在这种淘汰算法中，先进⼊缓存的会先被淘汰</p> </li> <li> <p>命中率很低</p> </li> </ul> </li> <li> <p>LRU</p> </li> </ul> <div> <ul> <li style="list-style-type: none"> <ul> <li> <p>Least recently used，最近最少使⽤get</p> </li> </ul> </li> </ul> <div> <ul> <li style="list-style-type: none"> <ul> <li> <p>根据数据的历史访问记录来进⾏淘汰数据，其核⼼思想是“如果数据最近被访问过，那么将来被访问的⼏率也更⾼”</p> </li> </ul> </li> </ul> <ul> <li style="list-style-type: none"> <ul> <li> <p>LRU算法原理剖析</p> </li> </ul> </li> </ul> </div> </div> <div> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/64e6aa49e4b949ab7d8137cbc62de7c6.jpg" alt="面试题目:手写一个LRU算法实现"></p> <ul> <li> <p>LFU</p> <ul> <li>Least Frequently Used</li> <li> <div> <p>算法根据数据的历史访问频率来淘汰数据，其核⼼思想是“如果数据过去被访问多次，那么将来被访问的频率也更⾼”</p> </div> </li> </ul> </li> </ul> <ul> <li style="list-style-type: none"> <ul> <li> <p>LFU算法原理剖析</p> </li> </ul> </li> </ul> <ul> <li style="list-style-type: none"> <ul> <li style="list-style-type: none"> <ul> <li> <p>新加⼊数据插⼊到队列尾部（因为引⽤计数为1）</p> </li> </ul> </li> </ul> </li> </ul> <div> <ul> <li style="list-style-type: none"> <ul> <li style="list-style-type: none"> <ul> <li class="_mce_tagged_br"> <p>队列中的数据被访问后，引⽤计数增加，队列重新排序；</p> </li> <li class="_mce_tagged_br"> <p>当需要淘汰数据时，将已经排序的列表最后的数据块删除。</p> </li> </ul> </li> </ul> </li> </ul> </div> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cf39945b3bd6c52d6d3bd30ba465d795.jpg" alt="面试题目:手写一个LRU算法实现"></p> <div> <ul> <li>LFU的缺点</li> <ul> <li>复杂度</li> <li>存储成本</li> <li>尾部容易被淘汰</li> </ul> </ul> </div> <h3>二、手写LRU算法实现</h3> <p>利用了LinkedHashMap双向链表插入可排序</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">@Slf4j</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span> LRUCache&lt;K, V&gt;<span style="color: rgba(0, 0, 255, 1)">extends</span> LinkedHashMap&lt;K, V&gt;<span style="color: rgba(0, 0, 0, 1)"> {</span><span style="color: rgba(0, 0, 255, 1)">private</span><span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> cacheSize;</span><span style="color: rgba(0, 0, 255, 1)">public</span> LRUCache(<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> cacheSize) {</span><span style="color: rgba(0, 0, 255, 1)">super</span>(16, 0.75f,<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 0, 255, 1)">this</span>.cacheSize =<span style="color: rgba(0, 0, 0, 1)"> cacheSize;     }      @Override</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">synchronized</span><span style="color: rgba(0, 0, 0, 1)"> V get(Object key) {</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 255, 1)">super</span><span style="color: rgba(0, 0, 0, 1)">.get(key);     }      @Override</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">synchronized</span><span style="color: rgba(0, 0, 0, 1)"> V put(K key, V value) {</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 255, 1)">super</span><span style="color: rgba(0, 0, 0, 1)">.put(key, value);     }      @Override</span><span style="color: rgba(0, 0, 255, 1)">protected</span><span style="color: rgba(0, 0, 255, 1)">boolean</span> removeEldestEntry(Map.Entry&lt;K, V&gt;<span style="color: rgba(0, 0, 0, 1)"> eldest) {</span><span style="color: rgba(0, 0, 255, 1)">boolean</span> f = size() &gt;<span style="color: rgba(0, 0, 0, 1)"> cacheSize;</span><span style="color: rgba(0, 0, 255, 1)">if</span><span style="color: rgba(0, 0, 0, 1)"> (f) {             log.info(</span>"LRUCache清除第三方密钥缓存Key:[{}]"<span style="color: rgba(0, 0, 0, 1)">, eldest.getKey());         }</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> f;     }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {         LRUCache</span>&lt;String, Object&gt; cache =<span style="color: rgba(0, 0, 255, 1)">new</span> LRUCache&lt;&gt;(5<span style="color: rgba(0, 0, 0, 1)">);         cache.put(</span>"A","A"<span style="color: rgba(0, 0, 0, 1)">);         cache.put(</span>"B","B"<span style="color: rgba(0, 0, 0, 1)">);         cache.put(</span>"C","C"<span style="color: rgba(0, 0, 0, 1)">);         cache.put(</span>"D","D"<span style="color: rgba(0, 0, 0, 1)">);         cache.put(</span>"E","E"<span style="color: rgba(0, 0, 0, 1)">);         System.out.println(</span>"初始化:" +<span style="color: rgba(0, 0, 0, 1)"> cache.keySet());         System.out.println(</span>"访问值:" + cache.get("C"<span style="color: rgba(0, 0, 0, 1)">));         System.out.println(</span>"访问C后:" +<span style="color: rgba(0, 0, 0, 1)"> cache.keySet());         System.out.println(</span>"PUT F后:" + cache.put("F","F"<span style="color: rgba(0, 0, 0, 1)">));         System.out.println(cache.keySet());     }  }</span></pre> </div> <p>main函数执行效果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/ff4d87a52766005a295eb888e9a8ad9a.jpg" alt="面试题目:手写一个LRU算法实现"></p> <h3>三、注意事项</h3> <p>LinkedHashMap有五个构造函数</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/be4cb82a55d3442838cc75db355ced3c.jpg" alt="面试题目:手写一个LRU算法实现"></p> <div class="cnblogs_code"><img decoding="async" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" alt="面试题目:手写一个LRU算法实现" id="code_img_closed_e57bb9e0-b7ee-46ae-97fe-789d845e4581" class="code_img_closed"/><img decoding="async" src="https://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" alt="面试题目:手写一个LRU算法实现" id="code_img_opened_e57bb9e0-b7ee-46ae-97fe-789d845e4581" class="code_img_opened" style="display: none"/></p> <div id="cnblogs_code_open_e57bb9e0-b7ee-46ae-97fe-789d845e4581" class="cnblogs_code_hide"> <pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">使用父类中的构造，初始化容量和加载因子，该初始化容量是指数组大小。</span><span style="color: rgba(0, 0, 255, 1)">public</span> LinkedHashMap(<span style="color: rgba(0, 0, 255, 1)">int</span> initialCapacity,<span style="color: rgba(0, 0, 255, 1)">float</span><span style="color: rgba(0, 0, 0, 1)"> loadFactor) {</span><span style="color: rgba(0, 0, 255, 1)">super</span><span style="color: rgba(0, 0, 0, 1)">(initialCapacity, loadFactor);         accessOrder</span>=<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">;     }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">一个参数的构造</span><span style="color: rgba(0, 0, 255, 1)">public</span> LinkedHashMap(<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> initialCapacity) {</span><span style="color: rgba(0, 0, 255, 1)">super</span><span style="color: rgba(0, 0, 0, 1)">(initialCapacity);         accessOrder</span>=<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">;     }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">无参构造</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 0, 1)"> LinkedHashMap() {</span><span style="color: rgba(0, 0, 255, 1)">super</span><span style="color: rgba(0, 0, 0, 1)">();         accessOrder</span>=<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">;     }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">这个不用多说，用来接受map类型的值转换为LinkedHashMap</span><span style="color: rgba(0, 0, 255, 1)">public</span> LinkedHashMap(Map&lt;?<span style="color: rgba(0, 0, 255, 1)">extends</span> K, ?<span style="color: rgba(0, 0, 255, 1)">extends</span> V&gt;<span style="color: rgba(0, 0, 0, 1)"> m) {</span><span style="color: rgba(0, 0, 255, 1)">super</span><span style="color: rgba(0, 0, 0, 1)">(m);         accessOrder</span>=<span style="color: rgba(0, 0, 255, 1)">false</span><span style="color: rgba(0, 0, 0, 1)">;     }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">真正有点特殊的就是这个，多了一个参数accessOrder。存储顺序，LinkedHashMap关键的参数之一就在这个，</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">true：指定迭代的顺序是按照访问顺序(近期访问最少到近期访问最多的元素)来迭代的。 false：指定迭代的顺序是按照插入顺序迭代，也就是通过插入元素的顺序来迭代所有元素</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">如果你想指定访问顺序，那么就只能使用该构造方法，其他三个构造方法默认使用插入顺序。</span><span style="color: rgba(0, 0, 255, 1)">public</span> LinkedHashMap(<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> initialCapacity,</span><span style="color: rgba(0, 0, 255, 1)">float</span><span style="color: rgba(0, 0, 0, 1)"> loadFactor,</span><span style="color: rgba(0, 0, 255, 1)">boolean</span><span style="color: rgba(0, 0, 0, 1)"> accessOrder) {</span><span style="color: rgba(0, 0, 255, 1)">super</span><span style="color: rgba(0, 0, 0, 1)">(initialCapacity, loadFactor);</span><span style="color: rgba(0, 0, 255, 1)">this</span>.accessOrder =<span style="color: rgba(0, 0, 0, 1)"> accessOrder;     }</span></pre> </div> <p><span class="cnblogs_code_collapse">View Code</span></div> <p>　　参数accessOrder。存储顺序，LinkedHashMap关键的参数之一就在这个， true：指定迭代的顺序是按照访问顺序(近期访问最少到近期访问最多的元素)来迭代的。 false：指定迭代的顺序是按照插入顺序迭代，也就是通过插入元素的顺序来迭代所有元素。</p> <p>　　如果你想指定访问顺序，那么就只能使用该构造方法，其他三个构造方法默认使用插入顺序。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">public</span> LinkedHashMap(<span style="color: rgba(0, 0, 255, 1)">int</span><span style="color: rgba(0, 0, 0, 1)"> initialCapacity,</span><span style="color: rgba(0, 0, 255, 1)">float</span><span style="color: rgba(0, 0, 0, 1)"> loadFactor,</span><span style="color: rgba(0, 0, 255, 1)">boolean</span><span style="color: rgba(0, 0, 0, 1)"> accessOrder) {</span><span style="color: rgba(0, 0, 255, 1)">super</span><span style="color: rgba(0, 0, 0, 1)">(initialCapacity, loadFactor);</span><span style="color: rgba(0, 0, 255, 1)">this</span>.accessOrder =<span style="color: rgba(0, 0, 0, 1)"> accessOrder;     }</span></pre> </div> <p>LinkedHashMap是非线程安全的，需要加互斥锁解决并发问题。</p> <h3>四、思考</h3> <p>　　需要根据应用场景确定cacheSize大小，如果实际缓存数量过小，会导致缓存中的数据长期得不到刷新，为防止这种或偶发情况的发生，可配合定时任务如起一个newSingleThreadScheduledExecutor，将上面存储的value修改封装为一个对象，里面增加一个时间戳储存，每次访问实时更新，定时扫描该队列将最近30分钟未访问的key删除；还需增加一个初始进入队列的历史时间记录，将超过1小时的数据清除。</p> </div> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-48101.htm">猫咪打针没反应（猫咪打针没反应怎么回事）</a></p>
                                        <p>下一个：<a href="/news/article-48460.htm">宠物领养小程序有哪些软件 宠物领养小程序有哪些软件好用</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-4-free-node-subscribe.htm" title="「11月4日」最高速度22.9M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「11月4日」最高速度22.9M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-28648.htm" title="免费领养狗狗正规网站平台有哪些软件可以下载（免费领养狗狗app）">免费领养狗狗正规网站平台有哪些软件可以下载（免费领养狗狗app）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-1-node-share.htm" title="「12月1日」最高速度18.9M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「12月1日」最高速度18.9M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-29-free-node-subscribe-links.htm" title="「12月29日」最高速度19.9M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「12月29日」最高速度19.9M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-25-free-node-subscribe.htm" title="「11月25日」最高速度18.1M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「11月25日」最高速度18.1M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-35607.htm" title="数据结构-有向无环图的拓扑排序（拓扑排序的简单应用）_在线工具">数据结构-有向无环图的拓扑排序（拓扑排序的简单应用）_在线工具</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-12-free-node-subscribe.htm" title="「11月12日」最高速度20.6M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「11月12日」最高速度20.6M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-1-free-high-speed-nodes.htm" title="「1月1日」最高速度18.3M/S，2025年Clash Nyanpasu免费机场订阅节点链接，2025翻墙机场推荐">「1月1日」最高速度18.3M/S，2025年Clash Nyanpasu免费机场订阅节点链接，2025翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-34351.htm" title="梦见抱着小男孩是什么意思预兆（女人做梦抱着小男孩什么预兆）">梦见抱着小男孩是什么意思预兆（女人做梦抱着小男孩什么预兆）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-19-clash-nyanpasu.htm" title="「10月19日」最高速度22.8M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「10月19日」最高速度22.8M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer>
        <!-- footer -->
        <section class="w3l-footer">
            <div class="w3l-footer-16-main py-5">
                <div class="container">
                    <div class="d-flex below-section justify-content-between align-items-center pt-4 mt-5">
                        <div class="columns text-lg-left text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <p>Clash Nyanpasu Github机场节点官网 版权所有 Powered by WordPress</p>
                        </div>
                        <div class="columns-2 mt-lg-0 mt-3">
                            <ul class="social">
                                <li><a href="#facebook"><span class="fa fa-facebook" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#linkedin"><span class="fa fa-linkedin" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#twitter"><span class="fa fa-twitter" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#google"><span class="fa fa-google-plus" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#github"><span class="fa fa-github" aria-hidden="true"></span></a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!-- move top -->
            <button onclick="topFunction()" id="movetop" title="Go to top">
                <span class="fa fa-angle-up"></span>
            </button>
            <script>
            // When the user scrolls down 20px from the top of the document, show the button
            window.onscroll = function() {
                scrollFunction()
            };

            function scrollFunction() {
                if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                    document.getElementById("movetop").style.display = "block";
                } else {
                    document.getElementById("movetop").style.display = "none";
                }
            }

            // When the user clicks on the button, scroll to the top of the document
            function topFunction() {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            }
            </script>
            <!-- //move top -->
            <script>
            $(function() {
                $('.navbar-toggler').click(function() {
                    $('body').toggleClass('noscroll');
                })
            });
            </script>
        </section>
        <!-- //footer -->
    </footer>
    <!-- jQuery JS -->
    <!-- <script src="/assets/website/js/frontend/clashnyanpasugithub/jquery-3.4.1.slim.min.js"></script> -->
    <!-- jQuery JS -->
    <script src="/assets/website/js/frontend/clashnyanpasugithub/jquery-3.5.1.min.js"></script>
    <!-- Template JavaScript -->
    <script src="/assets/website/js/frontend/clashnyanpasugithub/owl.carousel.js"></script>
    <!-- script for testimonials -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //testimonials owlcarousel -->
    <!-- script for customers -->
    <script>
    $(document).ready(function() {
        $('.owl-three').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 2,
                    nav: false
                },
                667: {
                    items: 2,
                    nav: false
                },
                1000: {
                    items: 4,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //customers owlcarousel -->
    <!-- responsive tabs -->
    <script src="/assets/website/js/frontend/clashnyanpasugithub/easyResponsiveTabs.js"></script>
    <!--Plug-in Initialisation-->
    <script type="text/javascript">
    $(document).ready(function() {
        //Horizontal Tab
        $('#parentHorizontalTab').easyResponsiveTabs({
            type: 'default', //Types: default, vertical, accordion
            width: 'auto', //auto or any width like 600px
            fit: true, // 100% fit in a container
            tabidentify: 'hor_1', // The tab groups identifier
            activate: function(event) { // Callback function if tab is switched
                var $tab = $(this);
                var $info = $('#nested-tabInfo');
                var $name = $('span', $info);
                $name.text($tab.text());
                $info.show();
            }
        });
    });
    </script>
    <script src="/assets/website/js/frontend/clashnyanpasugithub/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- stats number counter-->
    <script src="/assets/website/js/frontend/clashnyanpasugithub/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/clashnyanpasugithub/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!--  Bootstrap JS -->
    <script src="/assets/website/js/frontend/clashnyanpasugithub/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>