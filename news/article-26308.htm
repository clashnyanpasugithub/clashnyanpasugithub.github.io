<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashnyanpasugithub.github.io/news/article-26308.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Springboot + MDC + traceId日志中打印唯一traceId</title>
        <meta name="description" content="先看一张图：有同学问：日志中[]中类似uuid的这个traceId是怎么实现的，这边文章就介绍下如何在springboot工程下用MDC实现日志文件中打印traceId。 1. 为什么需要这个trac" />
        <link rel="icon" href="/assets/website/img/clashnyanpasugithub/favicon.ico" type="image/x-icon"/>
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashnyanpasugithub/style-starter.css">
    <!-- web fonts -->
    <link href="//fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800;900&display=swap" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-F1C52JTEWP"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-F1C52JTEWP');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand" href="/">
                    <span>Clash Nyanpasu Github</span>
                </a>
                                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </header>
    <!--/header-->
    <!-- about breadcrumbs -->
    <nav id="breadcrumbs" class="breadcrumbs">
        <div class="container page-wrapper">
            <a href="/">首页</a> » <a href="/news/">新闻资讯</a> » <span class="breadcrumb_last" aria-current="page">正文</span>
        </div>
    </nav>
    
    <!-- /index-block2 -->
    <section class="w3l-index3 py-5">
        <div class="container py-lg-3 mt-3">
            <div class="row">
                <div class="col-md-9">
                    <h1 class="mb-5">Springboot + MDC + traceId日志中打印唯一traceId</h1>
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>先看一张图：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230118/9b82d81521240018e745e8f52ae76305.jpg" alt="Springboot + MDC + traceId日志中打印唯一traceId">有同学问：日志中[]中类似uuid的这个traceId是怎么实现的，这边文章就介绍下如何在springboot工程下用MDC实现日志文件中打印traceId。</p> <p><strong>1. 为什么需要这个traceId</strong><br /> 我们在定位问题的时候需要去日志中查找对应的位置，当我们一个接口的请求同用唯一的一个traceId，那我们只需要知道这个traceId，使用 grep ‘traceId’ xxx.log 语句就能准确的定位到目标日志。在这边文章会介绍如何去设置这个traceId，而后如何在接口返回这个traceId。</p> <pre><code class="prism language-csharp"><span class="token preprocessor property">#接口返回：</span> <span class="token punctuation">{<!-- --></span>     <span class="token string">"code"</span><span class="token punctuation">:</span> <span class="token string">"0"</span><span class="token punctuation">,</span>     <span class="token string">"dealStatus"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>     <span class="token string">"TRACE_ID"</span><span class="token punctuation">:</span> <span class="token string">"a10e6e8d-9953-4de9-b145-32eee6aa5562"</span> <span class="token punctuation">}</span> <span class="token preprocessor property">#查询日志</span>  grep <span class="token string">'a10e6e8d-9953-4de9-b145-32eee6aa5562'</span> xxxx<span class="token punctuation">.</span>log </code></pre> <p><strong>2.通过MDC设置traceId</strong><br /> 笔者目前遇到的项目，可以有三种情况去设置traceId。先简单的介绍MDC</p> <pre><code class="prism language-csharp"> <span class="token preprocessor property">#MDC定义</span>  <span class="token class-name">Mapped</span> <span class="token class-name">Diagnostic</span> Context，即：映射诊断环境。  MDC是 log4j 和 logback 提供的一种方便在多线程条件下记录日志的功能。  MDC 可以看成是一个与当前线程绑定的哈希表，可以往其中添加键值对。  <span class="token preprocessor property">#MDC的使用方法</span>  向MDC中设置值：MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  从MDC中取值：MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>  将MDC中内容打印到日志中：<span class="token operator">%</span>X<span class="token punctuation">{<!-- --></span>key<span class="token punctuation">}</span> </code></pre> <p>2.1 使用filter过滤器设置traceId<br /> 新建一个过滤器，实现Filter，重写init，doFilter，destroy方法，设置traceId放在doFilter中，在destroy中调用MDC.clear()方法。</p> <pre><code class="prism language-csharp">@Slf4j @<span class="token function">WebFilter</span><span class="token punctuation">(</span>filterName <span class="token operator">=</span> <span class="token string">"traceIdFilter"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/*"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">class</span> traceIdFilter implements Filter <span class="token punctuation">{<!-- --></span>  	<span class="token comment">/**      * 日志跟踪标识      */</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> TRACE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>          @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> throws ServletException <span class="token punctuation">{<!-- --></span>     <span class="token punctuation">}</span>      @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> servletRequest<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> servletResponse<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span>             throws IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     	MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>   </code></pre> <p>2.2 使用JWT token过滤器的项目<br /> springboot项目经常使用spring security+jwt来做权限限制，在这种情况下，我们通过新建filter过滤器来设置traceId，那么在验证token这部分的日志就不会带上traceId，因此我们需要把代码放在jwtFilter中，如图：</p> <pre><code class="prism language-csharp"><span class="token comment">/**  * token过滤器 验证token有效性  *  * @author china  */</span> @<span class="token class-name">Component</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtAuthenticationTokenFilter</span> extends OncePerRequestFilter <span class="token punctuation">{<!-- --></span>     @<span class="token class-name">Autowired</span>     <span class="token keyword">private</span> <span class="token class-name">TokenService</span> tokenService<span class="token punctuation">;</span>      <span class="token comment">/**      * 日志跟踪标识      */</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> TRACE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>      @<span class="token class-name">Override</span>     <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span>             throws ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">LoginUser</span> loginUser <span class="token operator">=</span> tokenService<span class="token punctuation">.</span><span class="token function">getLoginUser</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>SecurityUtils<span class="token punctuation">.</span><span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             tokenService<span class="token punctuation">.</span><span class="token function">verifyToken</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">UsernamePasswordAuthenticationToken</span> authenticationToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loginUser<span class="token punctuation">.</span><span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             authenticationToken<span class="token punctuation">.</span><span class="token function">setDetails</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebAuthenticationDetailsSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">buildDetails</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             SecurityContextHolder<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span>authenticationToken<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>          @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>2.3 使用Interceptor拦截器设置traceId<br /> 定义一个拦截器，重写preHandle方法，在方法中通过MDC设置traceId</p> <pre><code class="prism language-csharp"><span class="token comment">/**  * MDC设置traceId拦截器  *  * @author china  */</span> @<span class="token class-name">Component</span> <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">TraceIdInterceptor</span> extends HandlerInterceptorAdapter <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> UNIQUE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>      @<span class="token class-name">Override</span>     <span class="token keyword">public</span> boolean <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>UNIQUE_ID<span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token keyword">true</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  	@<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> @<span class="token class-name">Nullable</span> <span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>  </code></pre> <p><strong>3.logback.xml中配置traceId</strong> <br /> 与之前的相比只是添加了[%X{TRACE_ID}]， [%X{***}]是一个模板，中间属性名是我们使用MDC put进去的。</p> <pre><code class="prism language-csharp"><span class="token preprocessor property">#之前</span> <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log.pattern"</span> <span class="token keyword">value</span><span class="token operator">=</span><span class="token string">"%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n"</span> <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token preprocessor property">#增加traceId后</span> <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log.pattern"</span> <span class="token keyword">value</span><span class="token operator">=</span><span class="token string">"%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - [%X{TRACE_ID}] - %msg%n"</span> <span class="token operator">/</span><span class="token operator">&gt;</span> </code></pre> <p><strong>4.补充异步方法带入上下文的traceId</strong><br /> 异步方法会开启一个新线程，我们想要是异步方法和主线程共用同一个traceId，首先先新建一个任务适配器MdcTaskDecorator，如图：</p> <pre><code class="prism language-csharp"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MdcTaskDecorator</span> implements TaskDecorator      <span class="token comment">/**      * 使异步线程池获得主线程的上下文      * @param runnable      * @return      */</span>     @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token class-name">Runnable</span> <span class="token function">decorate</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> runnable<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">&gt;</span> map <span class="token operator">=</span> MDC<span class="token punctuation">.</span><span class="token function">getCopyOfContextMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>                 MDC<span class="token punctuation">.</span><span class="token function">setContextMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>                 runnable<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>                 MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>  </code></pre> <p>然后，在线程池配置中增加executor.setTaskDecorator(new MdcTaskDecorator())的设置</p> <pre><code class="prism language-csharp"> <span class="token comment">/**  * 线程池配置  *  * @author china  **/</span> @EnableAsync @<span class="token class-name">Configuration</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadPoolConfig</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> <span class="token keyword">int</span> corePoolSize <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> maxPoolSize <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> queueCapacity <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> keepAliveSeconds <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>      @<span class="token function">Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"threadPoolTaskExecutor"</span><span class="token punctuation">)</span>     <span class="token keyword">public</span> <span class="token class-name">ThreadPoolTaskExecutor</span> <span class="token function">threadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">ThreadPoolTaskExecutor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setMaxPoolSize</span><span class="token punctuation">(</span>maxPoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setCorePoolSize</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setQueueCapacity</span><span class="token punctuation">(</span>queueCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setKeepAliveSeconds</span><span class="token punctuation">(</span>keepAliveSeconds<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setTaskDecorator</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MdcTaskDecorator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 线程池对拒绝任务(无线程可用)的处理策略</span>         executor<span class="token punctuation">.</span><span class="token function">setRejectedExecutionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> executor<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>最后，在业务代码上使用@Async开启异步方法即可</p> <pre><code class="prism language-csharp">    @<span class="token function">Async</span><span class="token punctuation">(</span><span class="token string">"threadPoolTaskExecutor"</span><span class="token punctuation">)</span>     <span class="token keyword">void</span> <span class="token function">testSyncMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p><strong>5.在接口放回中，增加traceId返回</strong><br /> 在笔者项目中，接口返回都使用了一个叫AjaxResult自定义类来包装，所以只需要把这个类的构造器中增加traceId返回即可，相对简单。</p> <pre><code class="prism language-csharp">   <span class="token comment">/**      * 日志跟踪标识      */</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> TRACE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>          <span class="token comment">/**      * 初始化一个新创建的 AjaxResult 对象，使其表示一个空消息。      */</span>     <span class="token keyword">public</span> <span class="token function">AjaxResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 初始化一个新创建的 AjaxResult 对象      *      * @param code 状态码      * @param msg  返回内容      */</span>     <span class="token keyword">public</span> <span class="token function">AjaxResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>CODE_TAG<span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>MSG_TAG<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 初始化一个新创建的 AjaxResult 对象      *      * @param code 状态码      * @param msg  返回内容      * @param data 数据对象      */</span>     <span class="token keyword">public</span> <span class="token function">AjaxResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">,</span> <span class="token class-name">Object</span> data<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>CODE_TAG<span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>MSG_TAG<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>DATA_TAG<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-25862.htm">动物疫苗研究现状论文（动物疫苗市场分析）</a></p>
                                        <p>下一个：<a href="/news/article-26309.htm">猪的疫苗接种间隔时间（猪疫苗间隔多少天可打别种疫苗）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-2-clash-nyanpasu.htm" title="「11月2日」最高速度18.5M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「11月2日」最高速度18.5M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-free-subscribe-node.htm" title="「12月18日」最高速度20.9M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「12月18日」最高速度20.9M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-23557.htm" title="中国动物疫苗市场分析（中国动物疫苗市场分析图）">中国动物疫苗市场分析（中国动物疫苗市场分析图）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-12-free-subscribe-node.htm" title="「9月12日」最高速度21M/S，2024年Clash Nyanpasu Github每天更新免费机场订阅节点链接">「9月12日」最高速度21M/S，2024年Clash Nyanpasu Github每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-17-free-subscribe-node.htm" title="「11月17日」最高速度22.7M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「11月17日」最高速度22.7M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-4-free-node-subscribe.htm" title="「11月4日」最高速度22.9M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「11月4日」最高速度22.9M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-6-free-high-speed-nodes.htm" title="「11月6日」最高速度19.6M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「11月6日」最高速度19.6M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-28-node-share-links.htm" title="「8月28日」最高速度18M/S，2024年Clash Nyanpasu Github每天更新免费机场订阅节点链接">「8月28日」最高速度18M/S，2024年Clash Nyanpasu Github每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-17-free-node-subscribe-links.htm" title="「10月17日」最高速度19.3M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「10月17日」最高速度19.3M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-21-node-share.htm" title="「11月21日」最高速度22.8M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐">「11月21日」最高速度22.8M/S，2024年Clash Nyanpasu Github免费机场订阅节点链接，2024翻墙机场推荐</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer>
        <!-- footer -->
        <section class="w3l-footer">
            <div class="w3l-footer-16-main py-5">
                <div class="container">
                    <div class="d-flex below-section justify-content-between align-items-center pt-4 mt-5">
                        <div class="columns text-lg-left text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <p>Clash Nyanpasu Github机场节点官网 版权所有 Powered by WordPress</p>
                        </div>
                        <div class="columns-2 mt-lg-0 mt-3">
                            <ul class="social">
                                <li><a href="#facebook"><span class="fa fa-facebook" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#linkedin"><span class="fa fa-linkedin" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#twitter"><span class="fa fa-twitter" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#google"><span class="fa fa-google-plus" aria-hidden="true"></span></a>
                                </li>
                                <li><a href="#github"><span class="fa fa-github" aria-hidden="true"></span></a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!-- move top -->
            <button onclick="topFunction()" id="movetop" title="Go to top">
                <span class="fa fa-angle-up"></span>
            </button>
            <script>
            // When the user scrolls down 20px from the top of the document, show the button
            window.onscroll = function() {
                scrollFunction()
            };

            function scrollFunction() {
                if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                    document.getElementById("movetop").style.display = "block";
                } else {
                    document.getElementById("movetop").style.display = "none";
                }
            }

            // When the user clicks on the button, scroll to the top of the document
            function topFunction() {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            }
            </script>
            <!-- //move top -->
            <script>
            $(function() {
                $('.navbar-toggler').click(function() {
                    $('body').toggleClass('noscroll');
                })
            });
            </script>
        </section>
        <!-- //footer -->
    </footer>
    <!-- jQuery JS -->
    <!-- <script src="/assets/website/js/frontend/clashnyanpasugithub/jquery-3.4.1.slim.min.js"></script> -->
    <!-- jQuery JS -->
    <script src="/assets/website/js/frontend/clashnyanpasugithub/jquery-3.5.1.min.js"></script>
    <!-- Template JavaScript -->
    <script src="/assets/website/js/frontend/clashnyanpasugithub/owl.carousel.js"></script>
    <!-- script for testimonials -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //testimonials owlcarousel -->
    <!-- script for customers -->
    <script>
    $(document).ready(function() {
        $('.owl-three').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 2,
                    nav: false
                },
                667: {
                    items: 2,
                    nav: false
                },
                1000: {
                    items: 4,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //customers owlcarousel -->
    <!-- responsive tabs -->
    <script src="/assets/website/js/frontend/clashnyanpasugithub/easyResponsiveTabs.js"></script>
    <!--Plug-in Initialisation-->
    <script type="text/javascript">
    $(document).ready(function() {
        //Horizontal Tab
        $('#parentHorizontalTab').easyResponsiveTabs({
            type: 'default', //Types: default, vertical, accordion
            width: 'auto', //auto or any width like 600px
            fit: true, // 100% fit in a container
            tabidentify: 'hor_1', // The tab groups identifier
            activate: function(event) { // Callback function if tab is switched
                var $tab = $(this);
                var $info = $('#nested-tabInfo');
                var $name = $('span', $info);
                $name.text($tab.text());
                $info.show();
            }
        });
    });
    </script>
    <script src="/assets/website/js/frontend/clashnyanpasugithub/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- stats number counter-->
    <script src="/assets/website/js/frontend/clashnyanpasugithub/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/clashnyanpasugithub/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!--  Bootstrap JS -->
    <script src="/assets/website/js/frontend/clashnyanpasugithub/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>